// Place your key bindings in this file to overwrite the defaults
[
	{
		"key": "cmd+n",
		"command": "extension.advancedNewFile"
	},
	{
		"key": "cmd+[",
		"command": "editor.fold",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+[",
		"command": "-editor.fold",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+]",
		"command": "editor.unfold",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+]",
		"command": "-editor.unfold",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+p",
		"command": "editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f2",
		"command": "-editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+y",
		"command": "editor.action.referenceSearch.trigger",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+f12",
		"command": "-editor.action.referenceSearch.trigger",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "cmd+p",
		"command": "workbench.action.keepEditor"
	},
	{
		"key": "cmd+k enter",
		"command": "-workbench.action.keepEditor"
	},
	{
		"key": "right ctrl+cmd",
		"command": "workbench.action.terminal.resizePaneRight",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+cmd+right",
		"command": "-workbench.action.terminal.resizePaneRight",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+cmd+p",
		"command": "workbench.action.showCommands"
	},
	{
		"key": "shift+cmd+p",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "right ctrl+cmd",
		"command": "workbench.action.terminal.resizePaneRight"
	},
	{
		"key": "cmd+k cmd+0",
		"command": "workbench.files.action.collapseExplorerFolders"
	},
	{
		"key": "shift+alt+cmd+e",
		"command": "-copilot-labs.use-brush-picker",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+k cmd+k",
		"command": "vscode-chatgpt.adhoc",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+7",
		"command": "-vscode-chatgpt.adhoc",
		"when": "editorHasSelection"
	},
	{
		"key": "ctrl+shift+e",
		"command": "editor.action.marker.nextInFiles",
		"when": "editorFocus"
	},
	{
		"key": "f8",
		"command": "-editor.action.marker.nextInFiles",
		"when": "editorFocus"
	},
	{
		"key": "shift+cmd+g",
		"command": "workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "shift+cmd+g",
		"command": "workbench.view.scm",
		"when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "cmd+[",
		"command": "editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "alt+cmd+[",
		"command": "-editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+]",
		"command": "editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "alt+cmd+]",
		"command": "-editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+]",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+[",
		"command": "-editor.action.outdentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "shift+cmd+c",
		"command": "copyRelativeFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "shift+alt+cmd+c",
		"command": "-copyRelativeFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "shift+cmd+k",
		"command": "-aipopup.action.modal.generate",
		"when": "editorFocus && !composerBarIsVisible"
	},
	{
		"key": "cmd+k",
		"command": "-aipopup.action.modal.generate",
		"when": "editorFocus && !composerBarIsVisible"
	},
	{
		"key": "cmd+i",
		"command": "composerMode.agent"
	}
]
